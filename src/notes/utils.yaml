import { clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export const cn = (...inputs) => {
  return twMerge(clsx(inputs));
};
ржПржЦрж╛ржирзЗ cn() ржирж╛ржорзЗ ржПржХржЯрж╛ utility function ржмрж╛ржирж╛ржирзЛ рж╣рзЯрзЗржЫрзЗ, ржпрзЗржЯрж╛ React + Tailwind CSS ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ className handle ржХрж░рж╛рж░ ржЬржирзНржп ржЦрзБржмржЗ ржЬржиржкрзНрж░рж┐рзЯред

ЁЯФН ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛:
1я╕ПтГг clsx(inputs)
clsx рж╣рж▓рзЛ ржПржХржЯрж╛ lightweight JavaScript рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржпрж╛ conditionally className ржпрзЛржЧ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ clsx("btn", isActive && "btn-active") ржПрж░ ржорждрзЛ ржХрж░рзЗ class ржпрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░рзЛред

ржПржЯрж╛ falsy values (null, false, undefined) ржмрж╛ржж ржжрж┐рзЯрзЗ clean string return ржХрж░рзЗред

2я╕ПтГг twMerge(...)
twMerge Tailwind CSS-ржПрж░ conflicting class ржЧрзБрж▓рзЛ intelligently resolve ржХрж░рзЗред

ржпрзЗржоржи: twMerge("bg-red-500", "bg-blue-500") тЖТ рж╢рзБржзрзБ bg-blue-500 ржерж╛ржХржмрзЗ, ржХрж╛рж░ржг ржПржЯрж╛ conflict resolve ржХрж░рзЗред

3я╕ПтГг cn(...inputs)
ржПржЗ function clsx ржжрж┐рзЯрзЗ class ржЧрзБрж▓рзЛ combine ржХрж░рзЗ, рждрж╛рж░ржкрж░ twMerge ржжрж┐рзЯрзЗ conflict-free final className return ржХрж░рзЗред

isPrimary true рж╣рж▓рзЗ bg-primary text-white ржпрзЛржЧ рж╣ржмрзЗ

isDisabled true рж╣рж▓рзЗ opacity-50 cursor-not-allowed ржпрзЛржЧ рж╣ржмрзЗ

рж╕ржм class ржЧрзБрж▓рзЛ merge рж╣ржмрзЗ ржПржмржВ conflict-free final className рждрзИрж░рж┐ рж╣ржмрзЗ

ЁЯОп ржХрзЗржи ржПржЯрж╛ useful?

ржлрж┐ржЪрж╛рж░	рж╕рзБржмрж┐ржзрж╛
clsx	conditionally class ржпрзЛржЧ ржХрж░рж╛ рж╕рж╣ржЬ
twMerge	Tailwind conflict resolve ржХрж░рзЗ
cn()	clean, reusable utility function